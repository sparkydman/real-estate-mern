{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Real estate API",
    "description": "An extensive API for real estate."
  },
  "host": "localhost:5500",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "Endpoints for users"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/property/": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/property/search/{keywords}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "keywords",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/api/v1/property/{id}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/api/v1/property/{propertyId}": {
      "put": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/property/{propertyId}/purchase": {
      "put": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/property/agent/{id}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/api/v1/property/agent/{id}/sold": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/api/v1/property/delete-image/{propertyId}": {
      "put": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/user/logout": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Register with your details",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Register with your details",
        "parameters": [
          {
            "name": "avatar",
            "in": "formData",
            "description": "upload avatar",
            "type": "file"
          },
          {
            "name": "Register",
            "in": "body",
            "description": "Registering new user.",
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "responses": {}
      }
    },
    "/api/v1/user/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Login with your details",
        "parameters": [
          {
            "name": "Login",
            "in": "body",
            "description": "Login a user.",
            "schema": {
              "$ref": "#/definitions/LoginUser"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/user/": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/api/v1/user/search/{keywords}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "keywords",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/api/v1/user/profile": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/user/{id}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/api/v1/user/profile/{userId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Authorization bearer header is required",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete a User by ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID.",
            "require": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/user/change-password/{userId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Authorization bearer header is required",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/user/change-email/{userId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Authorization bearer header is required",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/user/forgot-password": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/api/v1/user/forgot-password/{token}": {
      "put": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/api/v1/review/property/{propertyId}": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/review/agent/{userId}": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/review/test": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/api/v1/review/{reviewId}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/review/like/{reviewId}": {
      "put": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/review/dislike/{reviewId}": {
      "put": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/dm/{to}": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "to",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/dm/{from}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/dm/{dmId}": {
      "delete": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "dmId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/dm/like/{dmId}": {
      "put": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "dmId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/dm/dislike/{dmId}": {
      "put": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "dmId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "Users": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "example": ""
        },
        "lastname": {
          "type": "string",
          "example": ""
        },
        "email": {
          "type": "string",
          "example": ""
        },
        "avatar": {
          "type": "string",
          "example": ""
        },
        "password": {
          "type": "string",
          "example": ""
        },
        "phone": {
          "type": "string",
          "example": ""
        },
        "role": {
          "type": "string",
          "example": ""
        },
        "enable": {
          "type": "string",
          "example": ""
        },
        "rating": {
          "type": "string",
          "example": ""
        },
        "badge": {
          "type": "string",
          "example": ""
        },
        "bio": {
          "type": "string",
          "example": ""
        },
        "createdAt": {
          "type": "string",
          "example": ""
        }
      }
    },
    "RegisterUser": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "example": "John"
        },
        "lastname": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "Doe@john.com"
        },
        "password": {
          "type": "string",
          "example": "123456"
        },
        "confirmPassword": {
          "type": "string",
          "example": "123456"
        },
        "phone": {
          "type": "string",
          "example": "+2348122572924"
        }
      },
      "required": [
        "firstname",
        "lastname",
        "email",
        "password",
        "confirmPassword",
        "phone"
      ]
    },
    "LoginUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "Doe@john.com"
        },
        "password": {
          "type": "string",
          "example": "123456"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "BooleanResponse": {
      "type": "boolean",
      "example": true
    },
    "StringArrayResponse": {
      "type": "array",
      "example": [
        "my example"
      ],
      "items": {
        "type": "string"
      }
    },
    "StringResponse": {
      "type": "string",
      "example": "my example"
    },
    "NumberResponse": {
      "type": "number",
      "example": 123
    },
    "ErrorObjectResponse": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/StringResponse"
        },
        "statusCode": {
          "$ref": "#/definitions/NumberResponse"
        },
        "path": {
          "$ref": "#/definitions/StringResponse"
        }
      }
    },
    "BoolenArrayResponse": {
      "type": "array",
      "example": [
        true
      ],
      "items": {
        "type": "boolean"
      }
    },
    "NumberArrayResponse": {
      "type": "array",
      "example": [
        123
      ],
      "items": {
        "type": "number"
      }
    },
    "FieldErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/StringArrayResponse"
        },
        "statusCode": {
          "$ref": "#/definitions/NumberResponse"
        },
        "path": {
          "$ref": "#/definitions/StringArrayResponse"
        }
      }
    }
  }
}